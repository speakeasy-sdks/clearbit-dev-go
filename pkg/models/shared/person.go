// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"time"
)

type PersonEmployment struct {
	// The domain of the company the person works for.
	Domain *string `json:"domain,omitempty"`
	// The name of the company the person works for.
	Name *string `json:"name,omitempty"`
	// The person's standardized role at the company they work for based on their title.
	Role *string `json:"role,omitempty"`
	// The person's standardized seniority at the company they work for based on their title.
	Seniority *string `json:"seniority,omitempty"`
	// The person's standardized sub role at the company they work for based on their title.
	SubRole *string `json:"subRole,omitempty"`
	// The person's title at the company they work for.
	Title *string `json:"title,omitempty"`
}

type PersonFacebook struct {
	// The person's Facebook profile username (e.g. amaccaw).
	Handle *string `json:"handle,omitempty"`
}

type PersonGeo struct {
	// The city the person lives in based on their location.
	City *string `json:"city,omitempty"`
	// The country the person lives in based on their location.
	Country *string `json:"country,omitempty"`
	// The country code of the country the person lives in based on their location.
	CountryCode *string `json:"countryCode,omitempty"`
	// The latitude based on the person's location.
	Lat *float32 `json:"lat,omitempty"`
	// The longitude based on the person's location.
	Lng *float32 `json:"lng,omitempty"`
	// The state the person lives in based on their location.
	State *string `json:"state,omitempty"`
	// The state code of the state the person lives in based on their location.
	StateCode *string `json:"stateCode,omitempty"`
}

type PersonGithub struct {
	// The profile picture of the person's GitHub profile.
	Avatar *string `json:"avatar,omitempty"`
	// The person's website as listed on their GitHub profile.
	Blog *string `json:"blog,omitempty"`
	// The company the person works for as listed on their GitHub profile.
	Company *string `json:"company,omitempty"`
	// The number of followers the person has on GitHub.
	Followers *int64 `json:"followers,omitempty"`
	// The number of people the person follows on GitHub.
	Following *int64 `json:"following,omitempty"`
	// The person's GitHub profile username (e.g. maccman).
	Handle *string `json:"handle,omitempty"`
	// The ID of the person's GitHub profile.
	ID *int64 `json:"id,omitempty"`
}

type PersonGoogleplus struct {
	// The person's Google Plus username. This field has been deprecated.
	Handle *string `json:"handle,omitempty"`
}

type PersonGravatarAvatars struct {
	// The type of picture listed by the person on their Gravatar profile.
	Type *string `json:"type,omitempty"`
	// The URL of a picture listed by the person on their Gravatar profile.
	URL *string `json:"url,omitempty"`
}

type PersonGravatarUrls struct {
	// The title of the website listed by the person on their Gravatar profile.
	Title *string `json:"title,omitempty"`
	// The website URL listed by the person on their Gravatar profile.
	Value *string `json:"value,omitempty"`
}

type PersonGravatar struct {
	// The profile picture of the person's Gravatar profile.
	Avatar  *string                 `json:"avatar,omitempty"`
	Avatars []PersonGravatarAvatars `json:"avatars,omitempty"`
	// The person's Gravatar profile username (e.g., maccman).
	Handle *string              `json:"handle,omitempty"`
	Urls   []PersonGravatarUrls `json:"urls,omitempty"`
}

type PersonLinkedin struct {
	// The last section of the person's LinkedIn profile URL (e.g. in/alex-maccaw-ab592978).
	Handle *string `json:"handle,omitempty"`
}

type PersonName struct {
	// The person's last name.
	FamilyName *string `json:"familyName,omitempty"`
	// The person's full name. This may exist even if the givenName or familyName aren't available.
	FullName *string `json:"fullName,omitempty"`
	// The person's first name.
	GivenName *string `json:"givenName,omitempty"`
}

type PersonTwitter struct {
	// The profile picture of the person's Twitter profile.
	Avatar *string `json:"avatar,omitempty"`
	// The person's bio as listed on their Twitter profile.
	Bio *string `json:"bio,omitempty"`
	// The number of tweets the person has liked on Twitter.
	Favorites *int64 `json:"favorites,omitempty"`
	// The number of followers the person has on Twitter.
	Followers *int64 `json:"followers,omitempty"`
	// The number of people the person follows on Twitter.
	Following *int64 `json:"following,omitempty"`
	// The person's Twitter profile username (e.g. maccaw).
	Handle *string `json:"handle,omitempty"`
	// The ID of the person's Twitter profile.
	ID *int64 `json:"id,omitempty"`
	// The person's location as listed on their Twitter profile.
	Location *string `json:"location,omitempty"`
	// The person's website as listed on their Twitter profile.
	Site *string `json:"site,omitempty"`
	// The number of tweets the person has shared on Twitter.
	Statuses *int64 `json:"statuses,omitempty"`
}

// Person - Successful lookup, person encoded in the response body
type Person struct {
	// Timestamp indicating when Clearbit detected the person's email became active.
	ActiveAt *time.Time `json:"activeAt,omitempty"`
	// The person's profile picture surfaced through their own social media accounts.
	Avatar *string `json:"avatar,omitempty"`
	// The person's bio surfaced through their own social media accounts.
	Bio *string `json:"bio,omitempty"`
	// The person's email.
	Email *string `json:"email,omitempty"`
	// Indicates whether the person's email domain is associated with a free email provider (e.g., Gmail). Useful for distinguishing between personal emails and work emails.
	EmailProvider *bool             `json:"emailProvider,omitempty"`
	Employment    *PersonEmployment `json:"employment,omitempty"`
	Facebook      *PersonFacebook   `json:"facebook,omitempty"`
	// Indicates whether the person's search was fuzzy or an exact match.
	Fuzzy      *bool             `json:"fuzzy,omitempty"`
	Geo        *PersonGeo        `json:"geo,omitempty"`
	Github     *PersonGithub     `json:"github,omitempty"`
	Googleplus *PersonGoogleplus `json:"googleplus,omitempty"`
	Gravatar   *PersonGravatar   `json:"gravatar,omitempty"`
	// Clearbit's internal identifier for the person.
	ID *string `json:"id,omitempty"`
	// Timestamp indicating when Clearbit detected the person's email became inactive.
	InactiveAt *time.Time `json:"inactiveAt,omitempty"`
	// Timestamp indicating when the person's record was last updated in Clearbit's database. A record update may or may not include new information about the person.
	IndexedAt *time.Time      `json:"indexedAt,omitempty"`
	Linkedin  *PersonLinkedin `json:"linkedin,omitempty"`
	// The city, state, and country where the person lives.
	Location *string     `json:"location,omitempty"`
	Name     *PersonName `json:"name,omitempty"`
	// The person's phone number.
	Phone *string `json:"phone,omitempty"`
	// The person's website surfaced through their own social media accounts.
	Site *string `json:"site,omitempty"`
	// The person's time zone based on their location.
	TimeZone *string        `json:"timeZone,omitempty"`
	Twitter  *PersonTwitter `json:"twitter,omitempty"`
	// The difference in hours from the person's time zone to UTC (-12 to 14).
	UtcOffset *int64 `json:"utcOffset,omitempty"`
}
